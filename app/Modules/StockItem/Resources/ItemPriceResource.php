<?php

namespace App\Modules\StockItem\Resources;

use Illuminate\Http\Request;

use App\Http\Resources\SuccessResource;
class ItemPriceResource extends SuccessResource
{

    public function toArray(Request $request): array
    {
        return [
            'id' => $this->id,
            'name' => $this->name,
            'code' => $this->code,
            'printName' => $this->print_name,
            'sku' => $this->sku,
            'articleNo' => $this->article_no,
            'partNo' => $this->part_no,
            'description' => $this->description,
            'stockCategoryId' => $this->stock_category_id,
            'stockGroupId' => $this->stock_group_id,
            'stockUnitId' => $this->stock_unit_id,
            'alternativeStockUnitId' => $this->alternative_stock_unit_id,
            'alternateUnitRatio' => $this->alternate_unit_ratio,
            'invoiceStockUnitId' => $this->invoice_stock_unit_id,
            'invoiceConversionFactor' => $this->invoice_conversion_factor,
            'noOfDecimalPlaces' => $this->no_of_decimal_places,
            'uniqueQuantityCodeId' => $this->unique_quantity_code_id,
            'typeOfSupply' => $this->type_of_supply,
            'isNegativeSalesAllow' => $this->is_negative_sales_allow,
            'isMaintainBatch' => $this->is_maintain_batch,
            'isMaintainSerial' => $this->is_maintain_serial,
            'isExpiryItem' => $this->is_expiry_item,
            'isFinishGoods' => $this->is_finish_goods,
            'isRawMaterial' => $this->is_raw_material,
            'isUnfinishedGoods' => $this->is_unfinished_goods,
            'costingMethod' => $this->costing_method,
            'pricingMethod' => $this->pricing_method,
            'reorderLevel' => $this->reorder_level,
            'minimumStock' => $this->minimum_stock,
            'maximumStock' => $this->maximum_stock,
            'hasBom' => $this->has_bom,
            'isSalesAsNewManufacture' => $this->is_sales_as_new_manufacture,
            'isPurchaseAsConsumed' => $this->is_purchase_as_consumed,
            'isRejectionAsScrap' => $this->is_rejection_as_scrap,
            'isGstApplicable' => $this->is_gst_applicable,
            'rateOfDuty' => $this->rate_of_duty,
            'hsnSacCode' => $this->hsn_sac_code,
            'isGstInclusive' => $this->is_gst_inclusive,
            'gstType' => $this->gst_type,
            'brandId' => $this->brand_id,
            'mrp' => $this->mrp,
            'standardCost' => $this->standard_cost,
            'icon' => $this->icon,
            'status' => $this->status,
            'createdAt' => $this->created_at,
            'updatedAt' => $this->updated_at,


        ];
    }
    // 'name',
    //     'code',
    //     'print_name',
    //     'sku',
    //     'article_no',
    //     'part_no',
    //     'description',
    //     'stock_category_id',
    //     'stock_group_id',
    //     'stock_unit_id',
    //     'alternative_stock_unit_id',
    //     'alternate_unit_ratio',
    //     'invoice_stock_unit_id',
    //     'invoice_conversion_factor',
    //     'no_of_decimal_places',
    //     'uqc_id',
    //     'type_of_supply',
    //     'is_negative_sales_allow',
    //     'is_maintain_batch',
    //     'is_maintain_serial',
    //     'is_expiry_item',
    //     'is_finish_goods',
    //     'is_raw_material',
    //     'is_unfinished_goods',
    //     'costing_method',
    //     'pricing_method',
    //     'reorder_level',
    //     'minimum_stock',
    //     'maximum_stock',
    //     'has_bom',
    //     'is_sales_as_new_manufacture',
    //     'is_purchase_as_consumed',
    //     'is_rejection_as_scrap',
    //     'is_gst_applicable',
    //     'rate_of_duty',
    //     'hsn_sac_code',
    //     'is_gst_inclusive',
    //     'gst_type',
    //     'brand_id',
    //     'mrp',
    //     'standard_cost',
    //     'icon',
    //     'status',
}
